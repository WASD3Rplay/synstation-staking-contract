{
  "address": "0x55C7df88E738f40E0F7a3b3a9BFfC431186bd29C",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DepositNFTNotSet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DepositNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmergencyTimestampNotReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ValueNotAccepted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawalNotEnabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroDeposit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "wrappedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wrappedAmount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "STETH",
      "outputs": [
        {
          "internalType": "contract ILido",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WSTETH",
      "outputs": [
        {
          "internalType": "contract IWstETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "depositAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRateFromWstToSt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "principalTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "depositedAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "wrappedTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "wrappedAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "walletBalances",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ogNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setDepositAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_depositNFT",
          "type": "address"
        }
      ],
      "name": "setDepositNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "setEmergencyWithdrawTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stETH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wstETH",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowDeposit",
          "type": "bool"
        }
      ],
      "name": "setLido",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ogNFT",
          "type": "address"
        }
      ],
      "name": "setOGNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setWithdrawalEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositToken",
          "type": "address"
        }
      ],
      "name": "userInfos",
      "outputs": [
        {
          "internalType": "address",
          "name": "wrappedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wrappedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xda45ec39d0cd2fcb41aabd37cabe68a976399fa8360b90e8ee1bb3b4b4dcb640",
  "receipt": {
    "to": null,
    "from": "0xbDc61836abdf0542Fe4A0B8bf30Eaed77953684b",
    "contractAddress": "0x55C7df88E738f40E0F7a3b3a9BFfC431186bd29C",
    "transactionIndex": 0,
    "gasUsed": "2118936",
    "logsBloom": "0x
    "blockHash": "0xa6c9e5ffbf5e882f6d70f37038ef2a778e587b82c05576b0e6bfed164d0ca1a9",
    "transactionHash": "0xda45ec39d0cd2fcb41aabd37cabe68a976399fa8360b90e8ee1bb3b4b4dcb640",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2201842,
        "transactionHash": "0xda45ec39d0cd2fcb41aabd37cabe68a976399fa8360b90e8ee1bb3b4b4dcb640",
        "address": "0x55C7df88E738f40E0F7a3b3a9BFfC431186bd29C",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000ff",
        "logIndex": 0,
        "blockHash": "0xa6c9e5ffbf5e882f6d70f37038ef2a778e587b82c05576b0e6bfed164d0ca1a9"
      }
    ],
    "blockNumber": 2201842,
    "cumulativeGasUsed": "2118936",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "975bd475cae4cbe715f3d2048cf508cb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DepositNFTNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyTimestampNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValueNotAccepted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroDeposit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wrappedAmount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"STETH\",\"outputs\":[{\"internalType\":\"contract ILido\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSTETH\",\"outputs\":[{\"internalType\":\"contract IWstETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"depositAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRateFromWstToSt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"principalTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"depositedAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"wrappedTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wrappedAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"walletBalances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ogNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setDepositAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositNFT\",\"type\":\"address\"}],\"name\":\"setDepositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"setEmergencyWithdrawTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wstETH\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowDeposit\",\"type\":\"bool\"}],\"name\":\"setLido\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ogNFT\",\"type\":\"address\"}],\"name\":\"setOGNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setWithdrawalEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"depositToken\",\"type\":\"address\"}],\"name\":\"userInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wrappedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Noah\",\"details\":\"features: - deposit ETH, stETH, ERC20 - mint OGNFT (if value >= 10 ETH only && once per user) - mint DepositNFT for each deposit\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"emergencyWithdraw(address)\":{\"details\":\"only available after EMERGENCY_WITHDRAW_TIMESTAMP\",\"params\":{\"token\":\"token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDepositAllowed(address,bool)\":{\"params\":{\"_allowed\":\"the allowed status\",\"_token\":\"the address of the token\"}},\"setDepositNFT(address)\":{\"params\":{\"_depositNFT\":\"the address of the deposit NFT contract\"}},\"setLido(address,address,bool)\":{\"params\":{\"_allowDeposit\":\"the allowed status\",\"_stETH\":\"the addresses of the tokens\",\"_wstETH\":\"the allowed status\"}},\"setOGNFT(address)\":{\"params\":{\"_ogNFT\":\"the address of the OG NFT contract\"}},\"setWithdrawalEnabled(bool)\":{\"params\":{\"_enabled\":\"the enabled status\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"details\":\"only available if withdrawalEnabled is true\",\"params\":{\"amount\":\"token amount\",\"token\":\"token address\"}}},\"title\":\"Staking.sol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyWithdraw(address)\":{\"notice\":\"Emergency withdraw all tokens\"},\"getUserInfo(address,address[])\":{\"notice\":\"VIEW\"},\"pause()\":{\"notice\":\"Pause deposits to the bridge (admin only)\"},\"setDepositAllowed(address,bool)\":{\"notice\":\"Set the deposit allowed status for a token\"},\"setDepositNFT(address)\":{\"notice\":\"Set the deposit NFT contract address\"},\"setLido(address,address,bool)\":{\"notice\":\"Set the deposit allowed status for lido related tokens\"},\"setOGNFT(address)\":{\"notice\":\"Set the OG NFT contract address\"},\"setWithdrawalEnabled(bool)\":{\"notice\":\"Set the withdrawal enabled status\"},\"unpause()\":{\"notice\":\"Unpause deposits to the bridge (admin only)\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw all tokens\"}},\"notice\":\"Main Staking Contract for synstation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport {Ownable2StepUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\\\";\\nimport {PausableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\nimport {SafeERC20} from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ninterface ILido is IERC20 {\\n    function submit(address user) external payable returns (uint256 stETHAmount);\\n}\\n\\ninterface IWstETH is IERC20 {\\n    function wrap(uint256 _stETHAmount) external returns (uint256 _wstETHAmount);\\n    function unwrap(uint256 _wstETHAmount) external returns (uint256 _stETHAmount);\\n    function getStETHByWstETH(uint256 _wstETHAmount) external view returns (uint256);\\n    function getWstETHByStETH(uint256 _stETHAmount) external view returns (uint256);\\n}\\n\\ninterface IDepositNFT {\\n    function safeMint(address to, address token, uint256 amount, address wrappedToken, uint256 wrappedAmount)\\n        external;\\n    function getTokenIds(address user) external view returns (uint256[] memory);\\n    function getDepositInfo(uint256 tokenId)\\n        external\\n        view\\n        returns (address depositToken, uint256 amount, address wrappedToken, uint256 wrappedAmount);\\n}\\n\\ninterface IOGNFT {\\n    function safeMint(address to) external;\\n    function ogMintAvailable(address to, uint256 commitment) external view returns (bool);\\n}\\n\\n/// @title Staking.sol\\n/// @author Noah\\n/// @notice Main Staking Contract for synstation\\n/// @dev features:\\n/// - deposit ETH, stETH, ERC20\\n/// - mint OGNFT (if value >= 10 ETH only && once per user)\\n/// - mint DepositNFT for each deposit\\ncontract Staking is Ownable2StepUpgradeable, PausableUpgradeable {\\n    using SafeERC20 for IERC20;\\n\\n    mapping(address token => bool accepted) public depositAllowed;\\n\\n    struct UserInfo {\\n        address wrappedToken;\\n        uint256 wrappedAmount;\\n    }\\n\\n    mapping(address user => mapping(address depositToken => UserInfo)) public userInfos;\\n\\n    address public depositNFT;\\n    address public ogNFT;\\n\\n    // For ETH deposit, Wrap\\n    ILido public STETH;\\n    IWstETH public WSTETH;\\n\\n    bool public withdrawalEnabled;\\n    uint256 EMERGENCY_WITHDRAW_TIMESTAMP = 1742660852;\\n\\n    error DepositNotAllowed();\\n    error DepositNFTNotSet();\\n    error ZeroDeposit();\\n    error InvalidAmount();\\n    error ValueNotAccepted();\\n    error EmergencyTimestampNotReached();\\n    error WithdrawalNotEnabled();\\n\\n    event Staked(\\n        address indexed user, address indexed token, uint256 amount, address wrappedToken, uint256 wrappedAmount\\n    );\\n\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize() external initializer {\\n        __Ownable2Step_init();\\n        __Pausable_init();\\n        _pause();\\n    }\\n\\n    /**\\n     * @notice Pause deposits to the bridge (admin only)\\n     */\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @notice Unpause deposits to the bridge (admin only)\\n     */\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @notice Set the deposit NFT contract address\\n     * @param _depositNFT the address of the deposit NFT contract\\n     */\\n    function setDepositNFT(address _depositNFT) external onlyOwner {\\n        depositNFT = _depositNFT;\\n    }\\n\\n    /**\\n     * @notice Set the OG NFT contract address\\n     * @param _ogNFT the address of the OG NFT contract\\n     */\\n    function setOGNFT(address _ogNFT) external onlyOwner {\\n        ogNFT = _ogNFT;\\n    }\\n\\n    /**\\n     * @notice Set the deposit allowed status for a token\\n     * @param _token the address of the token\\n     * @param _allowed the allowed status\\n     */\\n    function setDepositAllowed(address _token, bool _allowed) external onlyOwner {\\n        depositAllowed[_token] = _allowed;\\n    }\\n\\n    function setEmergencyWithdrawTimestamp(uint256 _timestamp) external onlyOwner {\\n        EMERGENCY_WITHDRAW_TIMESTAMP = _timestamp;\\n    }\\n\\n    /**\\n     * @notice Set the deposit allowed status for lido related tokens\\n     * @param _stETH the addresses of the tokens\\n     * @param _wstETH the allowed status\\n     * @param _allowDeposit the allowed status\\n     */\\n    function setLido(address _stETH, address _wstETH, bool _allowDeposit) external onlyOwner {\\n        STETH = ILido(_stETH);\\n        WSTETH = IWstETH(_wstETH);\\n\\n        STETH.approve(address(WSTETH), type(uint256).max);\\n        WSTETH.approve(address(STETH), type(uint256).max);\\n\\n        if (_allowDeposit) {\\n            depositAllowed[address(STETH)] = true;\\n            depositAllowed[address(WSTETH)] = true;\\n            depositAllowed[address(0)] = true; // ETH\\n        }\\n    }\\n\\n    /**\\n     * @notice Set the withdrawal enabled status\\n     * @param _enabled the enabled status\\n     */\\n    function setWithdrawalEnabled(bool _enabled) external onlyOwner {\\n        withdrawalEnabled = _enabled;\\n    }\\n\\n    /*\\n     * @notice Deposit token to the contract\\n     * @param token token address\\n     * @param amount token amount\\n     * @dev depositETH -> stETH -> wstETH\\n     * @dev depositstETH -> wstETH\\n     * @dev depositERC20 -> ERC20\\n     */\\n    function deposit(address token, uint256 amount) external payable whenNotPaused {\\n        if (!depositAllowed[token]) {\\n            revert DepositNotAllowed();\\n        }\\n        if (depositNFT == address(0)) {\\n            revert DepositNFTNotSet();\\n        }\\n\\n        uint256 tokenAmt;\\n        if (token == address(0)) {\\n            _depositETH(amount);\\n            // stake ETH to stETH after deposit\\n            STETH.submit{value: amount}(msg.sender);\\n            // wrap stETH to wstETH after deposit\\n            tokenAmt = WSTETH.wrap(amount);\\n\\n            // mint OGNFT if amount >= 10 ETH only once per user\\n            if (IOGNFT(ogNFT).ogMintAvailable(msg.sender, amount)) {\\n                IOGNFT(ogNFT).safeMint(msg.sender);\\n            }\\n\\n            IDepositNFT(depositNFT).safeMint(msg.sender, address(0), msg.value, address(WSTETH), tokenAmt);\\n\\n            UserInfo storage user = userInfos[msg.sender][address(0)];\\n\\n            user.wrappedAmount += tokenAmt;\\n            user.wrappedToken = address(WSTETH);\\n\\n            emit Staked(msg.sender, address(0), msg.value, address(WSTETH), tokenAmt);\\n        } else if (token == address(STETH)) {\\n            _depositERC20(token, amount);\\n            // wrap stETH to wstETH after deposit\\n            tokenAmt = WSTETH.wrap(amount);\\n\\n            IDepositNFT(depositNFT).safeMint(msg.sender, address(STETH), amount, address(WSTETH), tokenAmt);\\n\\n            UserInfo storage user = userInfos[msg.sender][address(STETH)];\\n\\n            user.wrappedAmount += tokenAmt;\\n            user.wrappedToken = address(WSTETH);\\n\\n            emit Staked(msg.sender, address(STETH), amount, address(WSTETH), tokenAmt);\\n        } else {\\n            _depositERC20(token, amount);\\n\\n            tokenAmt = amount;\\n\\n            IDepositNFT(depositNFT).safeMint(msg.sender, token, tokenAmt, token, tokenAmt);\\n\\n            UserInfo storage user = userInfos[msg.sender][token];\\n\\n            user.wrappedAmount += tokenAmt;\\n            user.wrappedToken = token;\\n\\n            emit Staked(msg.sender, token, amount, token, tokenAmt);\\n        }\\n    }\\n\\n    function _depositETH(uint256 amount) internal {\\n        if (msg.value == 0) {\\n            revert ZeroDeposit();\\n        }\\n        if (msg.value != amount) {\\n            revert InvalidAmount();\\n        }\\n    }\\n\\n    function _depositERC20(address token, uint256 amount) internal {\\n        if (amount == 0) {\\n            revert ZeroDeposit();\\n        }\\n        if (msg.value != 0) {\\n            revert ValueNotAccepted();\\n        }\\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @notice Emergency withdraw all tokens\\n     * @param token token address\\n     * @dev only available after EMERGENCY_WITHDRAW_TIMESTAMP\\n     */\\n    function emergencyWithdraw(address token) external {\\n        if (EMERGENCY_WITHDRAW_TIMESTAMP > block.timestamp) {\\n            revert EmergencyTimestampNotReached();\\n        }\\n\\n        UserInfo storage user = userInfos[msg.sender][token];\\n        if (token == address(0) || token == address(STETH)) {\\n            uint256 stAmount = WSTETH.unwrap(user.wrappedAmount);\\n\\n            user.wrappedAmount = 0;\\n            STETH.transfer(msg.sender, stAmount);\\n        } else {\\n            user.wrappedAmount = 0;\\n            IERC20(token).safeTransfer(msg.sender, user.wrappedAmount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Withdraw all tokens\\n     * @param token token address\\n     * @param amount token amount\\n     * @dev only available if withdrawalEnabled is true\\n     */\\n    function withdraw(address token, uint256 amount) external {\\n        if (!withdrawalEnabled) {\\n            revert WithdrawalNotEnabled();\\n        }\\n\\n        _withdraw(token, amount);\\n    }\\n\\n    function _withdraw(address token, uint256 amount) internal {\\n        UserInfo storage user = userInfos[msg.sender][token];\\n        if (token == address(0) || token == address(STETH)) {\\n            uint256 wstAmount = WSTETH.getWstETHByStETH(amount);\\n\\n            user.wrappedAmount -= wstAmount;\\n\\n            uint256 stAmount = WSTETH.unwrap(wstAmount);\\n\\n            STETH.transfer(msg.sender, stAmount);\\n        } else {\\n            user.wrappedAmount -= amount;\\n\\n            IERC20(token).safeTransfer(msg.sender, amount);\\n        }\\n    }\\n\\n    /// VIEW\\n    function getUserInfo(address user, address[] memory tokens)\\n        external\\n        view\\n        returns (\\n            address[] memory principalTokens,\\n            uint256[] memory depositedAmounts,\\n            address[] memory wrappedTokens,\\n            uint256[] memory wrappedAmounts,\\n            uint256[] memory walletBalances\\n        )\\n    {\\n        principalTokens = new address[](tokens.length);\\n        wrappedTokens = new address[](tokens.length);\\n        wrappedAmounts = new uint256[](tokens.length);\\n        walletBalances = new uint256[](tokens.length);\\n        depositedAmounts = new uint256[](tokens.length);\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            principalTokens[i] = tokens[i];\\n            if (tokens[i] == address(0)) {\\n                walletBalances[i] = address(user).balance;\\n            } else {\\n                walletBalances[i] = IERC20(tokens[i]).balanceOf(user);\\n            }\\n            wrappedTokens[i] = userInfos[user][tokens[i]].wrappedToken;\\n            wrappedAmounts[i] = userInfos[user][tokens[i]].wrappedAmount;\\n\\n            if (tokens[i] != wrappedTokens[i]) {\\n                depositedAmounts[i] = WSTETH.getStETHByWstETH(wrappedAmounts[i]);\\n            } else {\\n                depositedAmounts[i] = wrappedAmounts[i];\\n            }\\n        }\\n    }\\n\\n    function getExchangeRateFromWstToSt() external view returns (uint256) {\\n        return WSTETH.getStETHByWstETH(1 ether);\\n    }\\n}\\n\",\"keccak256\":\"0xace14ece479eccc20c0498c0d5e66c1ce341cb6b7c5681849503c6d9f73c6d5d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526367dee4f460cf5534801561001857600080fd5b50610021610026565b6100e5565b600054610100900460ff16156100925760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100e3576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61247880620000f56000396000f3fe60806040526004361061019c5760003560e01c80638456cb59116100ec578063d9fb643a1161008a578063ec3d863a11610064578063ec3d863a146104c7578063f2fde38b146104ea578063f3fef3a31461050a578063f8ea5daf1461052a57600080fd5b8063d9fb643a14610469578063e00bfe5014610489578063e30c3978146104a957600080fd5b80639a70d263116100c65780639a70d2631461037e578063b1d231c11461039e578063bd9f9b47146103cf578063c9b5279c146103ff57600080fd5b80638456cb591461032b57806387878fef146103405780638da5cb5b1461036057600080fd5b806367e3c4d4116101595780636ff1c9bc116101335780636ff1c9bc146102cc578063715018a6146102ec57806379ba5097146103015780638129fc1c1461031657600080fd5b806367e3c4d41461026c5780636beb716c1461028c5780636c31ffbc146102ac57600080fd5b806313822724146101a15780631553c740146101c3578063371db5b0146102005780633f4ba83a1461022057806347e7ef24146102355780635c975abb14610248575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611fa8565b61054b565b005b3480156101cf57600080fd5b5060cc546101e3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561020c57600080fd5b506101c161021b366004611fdf565b61057e565b34801561022c57600080fd5b506101c16105a8565b6101c1610243366004612001565b6105ba565b34801561025457600080fd5b5060975460ff165b60405190151581526020016101f7565b34801561027857600080fd5b5060cb546101e3906001600160a01b031681565b34801561029857600080fd5b506101c16102a736600461202b565b610bce565b3480156102b857600080fd5b506101c16102c7366004612044565b610bdb565b3480156102d857600080fd5b506101c16102e7366004611fdf565b610d6e565b3480156102f857600080fd5b506101c1610ef0565b34801561030d57600080fd5b506101c1610f02565b34801561032257600080fd5b506101c1610f81565b34801561033757600080fd5b506101c16110a1565b34801561034c57600080fd5b506101c161035b36600461208b565b6110b1565b34801561036c57600080fd5b506033546001600160a01b03166101e3565b34801561038a57600080fd5b506101c1610399366004611fdf565b6110d7565b3480156103aa57600080fd5b506103be6103b93660046120be565b611101565b6040516101f795949392919061220a565b3480156103db57600080fd5b5061025c6103ea366004611fdf565b60c96020526000908152604090205460ff1681565b34801561040b57600080fd5b5061044a61041a366004612277565b60ca602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101f7565b34801561047557600080fd5b5060ce546101e3906001600160a01b031681565b34801561049557600080fd5b5060cd546101e3906001600160a01b031681565b3480156104b557600080fd5b506065546001600160a01b03166101e3565b3480156104d357600080fd5b506104dc61163e565b6040519081526020016101f7565b3480156104f657600080fd5b506101c1610505366004611fdf565b6116b8565b34801561051657600080fd5b506101c1610525366004612001565b611729565b34801561053657600080fd5b5060ce5461025c90600160a01b900460ff1681565b61055361175d565b6001600160a01b0391909116600090815260c960205260409020805460ff1916911515919091179055565b61058661175d565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6105b061175d565b6105b86117b7565b565b6105c2611809565b6001600160a01b038216600090815260c9602052604090205460ff166105fb576040516301ec871560e51b815260040160405180910390fd5b60cb546001600160a01b0316610624576040516317d7369760e31b815260040160405180910390fd5b60006001600160a01b0383166109085761063d8261184f565b60cd5460405163a1903eab60e01b81523360048201526001600160a01b039091169063a1903eab90849060240160206040518083038185885af1158015610688573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106ad91906122aa565b5060ce54604051630ea598cb60e41b8152600481018490526001600160a01b039091169063ea598cb0906024016020604051808303816000875af11580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d91906122aa565b60cc546040516335e8059960e21b8152336004820152602481018590529192506001600160a01b03169063d7a0166490604401602060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079191906122c3565b156107f45760cc546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c390602401600060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b505050505b60cb5460ce5460405163db8d5a9560e01b81526001600160a01b039283169263db8d5a9592610831923392600092349291169088906004016122e0565b600060405180830381600087803b15801561084b57600080fd5b505af115801561085f573d6000803e3d6000fd5b505033600090815260ca6020908152604080832083805290915281206001810180549194508593509190610894908490612329565b909155505060ce805482546001600160a01b0319166001600160a01b0391821617835590546040805134815291909216602082015290810183905260009033907f859761954570e1d76aff608003023b9377aa1cada3dad30695765a4893189052906060015b60405180910390a350505050565b60cd546001600160a01b0390811690841603610ab5576109288383611890565b60ce54604051630ea598cb60e41b8152600481018490526001600160a01b039091169063ea598cb0906024016020604051808303816000875af1158015610973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099791906122aa565b60cb5460cd5460ce5460405163db8d5a9560e01b81529394506001600160a01b039283169363db8d5a95936109dc9333939082169289929091169088906004016122e0565b600060405180830381600087803b1580156109f657600080fd5b505af1158015610a0a573d6000803e3d6000fd5b505033600090815260ca6020908152604080832060cd546001600160a01b0316845290915281206001810180549194508593509190610a4a908490612329565b909155505060ce805482546001600160a01b0319166001600160a01b0391821617835560cd549154604080518781529183166020830152810185905291169033907f859761954570e1d76aff608003023b9377aa1cada3dad30695765a4893189052906060016108fa565b610abf8383611890565b5060cb5460405163db8d5a9560e01b815282916001600160a01b03169063db8d5a9590610af890339087908690829082906004016122e0565b600060405180830381600087803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b505033600090815260ca602090815260408083206001600160a01b038916845290915281206001810180549194508593509190610b64908490612329565b909155505080546001600160a01b0319166001600160a01b0385169081178255604080518581526020810183905290810184905233907f859761954570e1d76aff608003023b9377aa1cada3dad30695765a48931890529060600160405180910390a3505b505050565b610bd661175d565b60cf55565b610be361175d565b60cd80546001600160a01b038581166001600160a01b0319928316811790935560ce805491861691909216811790915560405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af1158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c91906122c3565b5060ce5460cd5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf791906122c3565b508015610bc957505060cd546001600160a01b03908116600090815260c960205260408082208054600160ff19918216811790925560ce54909416835290822080548416821790559080527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756805490921617905550565b4260cf541115610d915760405163c793651560e01b815260040160405180910390fd5b33600090815260ca602090815260408083206001600160a01b0385168085529252909120901580610dcf575060cd546001600160a01b038381169116145b15610ecd5760ce546001820154604051636f074d1f60e11b815260048101919091526000916001600160a01b03169063de0e9a3e906024016020604051808303816000875af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a91906122aa565b6000600184015560cd5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec791906122c3565b50505050565b600060018201819055610eec906001600160a01b0384169033906118e5565b5050565b610ef861175d565b6105b86000611948565b60655433906001600160a01b03168114610f755760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b610f7e81611948565b50565b600054610100900460ff1615808015610fa15750600054600160ff909116105b80610fbb5750303b158015610fbb575060005460ff166001145b61101e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610f6c565b6000805460ff191660011790558015611041576000805461ff0019166101001790555b611049611961565b611051611990565b6110596119bf565b8015610f7e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6110a961175d565b6105b86119bf565b6110b961175d565b60ce8054911515600160a01b0260ff60a01b19909216919091179055565b6110df61175d565b60cc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060806060806060855167ffffffffffffffff811115611123576111236120a8565b60405190808252806020026020018201604052801561114c578160200160208202803683370190505b509450855167ffffffffffffffff811115611169576111696120a8565b604051908082528060200260200182016040528015611192578160200160208202803683370190505b509250855167ffffffffffffffff8111156111af576111af6120a8565b6040519080825280602002602001820160405280156111d8578160200160208202803683370190505b509150855167ffffffffffffffff8111156111f5576111f56120a8565b60405190808252806020026020018201604052801561121e578160200160208202803683370190505b509050855167ffffffffffffffff81111561123b5761123b6120a8565b604051908082528060200260200182016040528015611264578160200160208202803683370190505b50935060005b86518110156116335786818151811061128557611285612342565b602002602001015186828151811061129f5761129f612342565b60200260200101906001600160a01b031690816001600160a01b03168152505060006001600160a01b03168782815181106112dc576112dc612342565b60200260200101516001600160a01b03160361132057876001600160a01b03163182828151811061130f5761130f612342565b6020026020010181815250506113c7565b86818151811061133257611332612342565b60209081029190910101516040516370a0823160e01b81526001600160a01b038a81166004830152909116906370a0823190602401602060405180830381865afa158015611384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a891906122aa565b8282815181106113ba576113ba612342565b6020026020010181815250505b6001600160a01b038816600090815260ca6020526040812088519091908990849081106113f6576113f6612342565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a90046001600160a01b031684828151811061144757611447612342565b60200260200101906001600160a01b031690816001600160a01b03168152505060ca6000896001600160a01b03166001600160a01b0316815260200190815260200160002060008883815181106114a0576114a0612342565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600101548382815181106114de576114de612342565b6020026020010181815250508381815181106114fc576114fc612342565b60200260200101516001600160a01b031687828151811061151f5761151f612342565b60200260200101516001600160a01b0316146115e85760ce5483516001600160a01b039091169063bb2952fc9085908490811061155e5761155e612342565b60200260200101516040518263ffffffff1660e01b815260040161158491815260200190565b602060405180830381865afa1580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c591906122aa565b8582815181106115d7576115d7612342565b602002602001018181525050611621565b8281815181106115fa576115fa612342565b602002602001015185828151811061161457611614612342565b6020026020010181815250505b8061162b81612358565b91505061126a565b509295509295909350565b60ce54604051632eca54bf60e21b8152670de0b6b3a764000060048201526000916001600160a01b03169063bb2952fc90602401602060405180830381865afa15801561168f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b391906122aa565b905090565b6116c061175d565b606580546001600160a01b0383166001600160a01b031990911681179091556116f16033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60ce54600160a01b900460ff16611753576040516307d03c5160e31b815260040160405180910390fd5b610eec82826119fc565b6033546001600160a01b031633146105b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610f6c565b6117bf611be3565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60975460ff16156105b85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610f6c565b34600003611870576040516356316e8760e01b815260040160405180910390fd5b803414610f7e5760405163162908e360e11b815260040160405180910390fd5b806000036118b1576040516356316e8760e01b815260040160405180910390fd5b34156118d057604051630d7b65ad60e01b815260040160405180910390fd5b610eec6001600160a01b038316333084611c2c565b6040516001600160a01b038316602482015260448101829052610bc990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c64565b606580546001600160a01b0319169055610f7e81611d39565b600054610100900460ff166119885760405162461bcd60e51b8152600401610f6c90612371565b6105b8611d8b565b600054610100900460ff166119b75760405162461bcd60e51b8152600401610f6c90612371565b6105b8611dbb565b6119c7611809565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117ec3390565b33600090815260ca602090815260408083206001600160a01b0386168085529252909120901580611a3a575060cd546001600160a01b038481169116145b15611bb55760ce5460405162b0e38960e81b8152600481018490526000916001600160a01b03169063b0e3890090602401602060405180830381865afa158015611a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aac91906122aa565b905080826001016000828254611ac291906123bc565b909155505060ce54604051636f074d1f60e11b8152600481018390526000916001600160a01b03169063de0e9a3e906024016020604051808303816000875af1158015611b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3791906122aa565b60cd5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bad91906122c3565b505050505050565b81816001016000828254611bc991906123bc565b90915550610bc990506001600160a01b03841633846118e5565b60975460ff166105b85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610f6c565b6040516001600160a01b0380851660248301528316604482015260648101829052610ec79085906323b872dd60e01b90608401611911565b6000611cb9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611dee9092919063ffffffff16565b9050805160001480611cda575080806020019051810190611cda91906122c3565b610bc95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610f6c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611db25760405162461bcd60e51b8152600401610f6c90612371565b6105b833611948565b600054610100900460ff16611de25760405162461bcd60e51b8152600401610f6c90612371565b6097805460ff19169055565b6060611dfd8484600085611e05565b949350505050565b606082471015611e665760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610f6c565b600080866001600160a01b03168587604051611e8291906123f3565b60006040518083038185875af1925050503d8060008114611ebf576040519150601f19603f3d011682016040523d82523d6000602084013e611ec4565b606091505b5091509150611ed587838387611ee0565b979650505050505050565b60608315611f4f578251600003611f48576001600160a01b0385163b611f485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f6c565b5081611dfd565b611dfd8383815115611f645781518083602001fd5b8060405162461bcd60e51b8152600401610f6c919061240f565b80356001600160a01b0381168114611f9557600080fd5b919050565b8015158114610f7e57600080fd5b60008060408385031215611fbb57600080fd5b611fc483611f7e565b91506020830135611fd481611f9a565b809150509250929050565b600060208284031215611ff157600080fd5b611ffa82611f7e565b9392505050565b6000806040838503121561201457600080fd5b61201d83611f7e565b946020939093013593505050565b60006020828403121561203d57600080fd5b5035919050565b60008060006060848603121561205957600080fd5b61206284611f7e565b925061207060208501611f7e565b9150604084013561208081611f9a565b809150509250925092565b60006020828403121561209d57600080fd5b8135611ffa81611f9a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156120d157600080fd5b6120da83611f7e565b915060208084013567ffffffffffffffff808211156120f857600080fd5b818601915086601f83011261210c57600080fd5b81358181111561211e5761211e6120a8565b8060051b604051601f19603f83011681018181108582111715612143576121436120a8565b60405291825284820192508381018501918983111561216157600080fd5b938501935b828510156121865761217785611f7e565b84529385019392850192612166565b8096505050505050509250929050565b600081518084526020808501945080840160005b838110156121cf5781516001600160a01b0316875295820195908201906001016121aa565b509495945050505050565b600081518084526020808501945080840160005b838110156121cf578151875295820195908201906001016121ee565b60a08152600061221d60a0830188612196565b828103602084015261222f81886121da565b905082810360408401526122438187612196565b9050828103606084015261225781866121da565b9050828103608084015261226b81856121da565b98975050505050505050565b6000806040838503121561228a57600080fd5b61229383611f7e565b91506122a160208401611f7e565b90509250929050565b6000602082840312156122bc57600080fd5b5051919050565b6000602082840312156122d557600080fd5b8151611ffa81611f9a565b6001600160a01b039586168152938516602085015260408401929092529092166060820152608081019190915260a00190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561233c5761233c612313565b92915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161236a5761236a612313565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8181038181111561233c5761233c612313565b60005b838110156123ea5781810151838201526020016123d2565b50506000910152565b600082516124058184602087016123cf565b9190910192915050565b602081526000825180602084015261242e8160408501602087016123cf565b601f01601f1916919091016040019291505056fea2646970667358221220528c4542ac1513819ce9cd365a99b1e074443f8b48119229e2c4cce9e03512f964736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c80638456cb59116100ec578063d9fb643a1161008a578063ec3d863a11610064578063ec3d863a146104c7578063f2fde38b146104ea578063f3fef3a31461050a578063f8ea5daf1461052a57600080fd5b8063d9fb643a14610469578063e00bfe5014610489578063e30c3978146104a957600080fd5b80639a70d263116100c65780639a70d2631461037e578063b1d231c11461039e578063bd9f9b47146103cf578063c9b5279c146103ff57600080fd5b80638456cb591461032b57806387878fef146103405780638da5cb5b1461036057600080fd5b806367e3c4d4116101595780636ff1c9bc116101335780636ff1c9bc146102cc578063715018a6146102ec57806379ba5097146103015780638129fc1c1461031657600080fd5b806367e3c4d41461026c5780636beb716c1461028c5780636c31ffbc146102ac57600080fd5b806313822724146101a15780631553c740146101c3578063371db5b0146102005780633f4ba83a1461022057806347e7ef24146102355780635c975abb14610248575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004611fa8565b61054b565b005b3480156101cf57600080fd5b5060cc546101e3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561020c57600080fd5b506101c161021b366004611fdf565b61057e565b34801561022c57600080fd5b506101c16105a8565b6101c1610243366004612001565b6105ba565b34801561025457600080fd5b5060975460ff165b60405190151581526020016101f7565b34801561027857600080fd5b5060cb546101e3906001600160a01b031681565b34801561029857600080fd5b506101c16102a736600461202b565b610bce565b3480156102b857600080fd5b506101c16102c7366004612044565b610bdb565b3480156102d857600080fd5b506101c16102e7366004611fdf565b610d6e565b3480156102f857600080fd5b506101c1610ef0565b34801561030d57600080fd5b506101c1610f02565b34801561032257600080fd5b506101c1610f81565b34801561033757600080fd5b506101c16110a1565b34801561034c57600080fd5b506101c161035b36600461208b565b6110b1565b34801561036c57600080fd5b506033546001600160a01b03166101e3565b34801561038a57600080fd5b506101c1610399366004611fdf565b6110d7565b3480156103aa57600080fd5b506103be6103b93660046120be565b611101565b6040516101f795949392919061220a565b3480156103db57600080fd5b5061025c6103ea366004611fdf565b60c96020526000908152604090205460ff1681565b34801561040b57600080fd5b5061044a61041a366004612277565b60ca602090815260009283526040808420909152908252902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101f7565b34801561047557600080fd5b5060ce546101e3906001600160a01b031681565b34801561049557600080fd5b5060cd546101e3906001600160a01b031681565b3480156104b557600080fd5b506065546001600160a01b03166101e3565b3480156104d357600080fd5b506104dc61163e565b6040519081526020016101f7565b3480156104f657600080fd5b506101c1610505366004611fdf565b6116b8565b34801561051657600080fd5b506101c1610525366004612001565b611729565b34801561053657600080fd5b5060ce5461025c90600160a01b900460ff1681565b61055361175d565b6001600160a01b0391909116600090815260c960205260409020805460ff1916911515919091179055565b61058661175d565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6105b061175d565b6105b86117b7565b565b6105c2611809565b6001600160a01b038216600090815260c9602052604090205460ff166105fb576040516301ec871560e51b815260040160405180910390fd5b60cb546001600160a01b0316610624576040516317d7369760e31b815260040160405180910390fd5b60006001600160a01b0383166109085761063d8261184f565b60cd5460405163a1903eab60e01b81523360048201526001600160a01b039091169063a1903eab90849060240160206040518083038185885af1158015610688573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106ad91906122aa565b5060ce54604051630ea598cb60e41b8152600481018490526001600160a01b039091169063ea598cb0906024016020604051808303816000875af11580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d91906122aa565b60cc546040516335e8059960e21b8152336004820152602481018590529192506001600160a01b03169063d7a0166490604401602060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079191906122c3565b156107f45760cc546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c390602401600060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b505050505b60cb5460ce5460405163db8d5a9560e01b81526001600160a01b039283169263db8d5a9592610831923392600092349291169088906004016122e0565b600060405180830381600087803b15801561084b57600080fd5b505af115801561085f573d6000803e3d6000fd5b505033600090815260ca6020908152604080832083805290915281206001810180549194508593509190610894908490612329565b909155505060ce805482546001600160a01b0319166001600160a01b0391821617835590546040805134815291909216602082015290810183905260009033907f859761954570e1d76aff608003023b9377aa1cada3dad30695765a4893189052906060015b60405180910390a350505050565b60cd546001600160a01b0390811690841603610ab5576109288383611890565b60ce54604051630ea598cb60e41b8152600481018490526001600160a01b039091169063ea598cb0906024016020604051808303816000875af1158015610973573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099791906122aa565b60cb5460cd5460ce5460405163db8d5a9560e01b81529394506001600160a01b039283169363db8d5a95936109dc9333939082169289929091169088906004016122e0565b600060405180830381600087803b1580156109f657600080fd5b505af1158015610a0a573d6000803e3d6000fd5b505033600090815260ca6020908152604080832060cd546001600160a01b0316845290915281206001810180549194508593509190610a4a908490612329565b909155505060ce805482546001600160a01b0319166001600160a01b0391821617835560cd549154604080518781529183166020830152810185905291169033907f859761954570e1d76aff608003023b9377aa1cada3dad30695765a4893189052906060016108fa565b610abf8383611890565b5060cb5460405163db8d5a9560e01b815282916001600160a01b03169063db8d5a9590610af890339087908690829082906004016122e0565b600060405180830381600087803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b505033600090815260ca602090815260408083206001600160a01b038916845290915281206001810180549194508593509190610b64908490612329565b909155505080546001600160a01b0319166001600160a01b0385169081178255604080518581526020810183905290810184905233907f859761954570e1d76aff608003023b9377aa1cada3dad30695765a48931890529060600160405180910390a3505b505050565b610bd661175d565b60cf55565b610be361175d565b60cd80546001600160a01b038581166001600160a01b0319928316811790935560ce805491861691909216811790915560405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af1158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c91906122c3565b5060ce5460cd5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf791906122c3565b508015610bc957505060cd546001600160a01b03908116600090815260c960205260408082208054600160ff19918216811790925560ce54909416835290822080548416821790559080527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756805490921617905550565b4260cf541115610d915760405163c793651560e01b815260040160405180910390fd5b33600090815260ca602090815260408083206001600160a01b0385168085529252909120901580610dcf575060cd546001600160a01b038381169116145b15610ecd5760ce546001820154604051636f074d1f60e11b815260048101919091526000916001600160a01b03169063de0e9a3e906024016020604051808303816000875af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a91906122aa565b6000600184015560cd5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec791906122c3565b50505050565b600060018201819055610eec906001600160a01b0384169033906118e5565b5050565b610ef861175d565b6105b86000611948565b60655433906001600160a01b03168114610f755760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b610f7e81611948565b50565b600054610100900460ff1615808015610fa15750600054600160ff909116105b80610fbb5750303b158015610fbb575060005460ff166001145b61101e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610f6c565b6000805460ff191660011790558015611041576000805461ff0019166101001790555b611049611961565b611051611990565b6110596119bf565b8015610f7e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6110a961175d565b6105b86119bf565b6110b961175d565b60ce8054911515600160a01b0260ff60a01b19909216919091179055565b6110df61175d565b60cc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060806060806060855167ffffffffffffffff811115611123576111236120a8565b60405190808252806020026020018201604052801561114c578160200160208202803683370190505b509450855167ffffffffffffffff811115611169576111696120a8565b604051908082528060200260200182016040528015611192578160200160208202803683370190505b509250855167ffffffffffffffff8111156111af576111af6120a8565b6040519080825280602002602001820160405280156111d8578160200160208202803683370190505b509150855167ffffffffffffffff8111156111f5576111f56120a8565b60405190808252806020026020018201604052801561121e578160200160208202803683370190505b509050855167ffffffffffffffff81111561123b5761123b6120a8565b604051908082528060200260200182016040528015611264578160200160208202803683370190505b50935060005b86518110156116335786818151811061128557611285612342565b602002602001015186828151811061129f5761129f612342565b60200260200101906001600160a01b031690816001600160a01b03168152505060006001600160a01b03168782815181106112dc576112dc612342565b60200260200101516001600160a01b03160361132057876001600160a01b03163182828151811061130f5761130f612342565b6020026020010181815250506113c7565b86818151811061133257611332612342565b60209081029190910101516040516370a0823160e01b81526001600160a01b038a81166004830152909116906370a0823190602401602060405180830381865afa158015611384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a891906122aa565b8282815181106113ba576113ba612342565b6020026020010181815250505b6001600160a01b038816600090815260ca6020526040812088519091908990849081106113f6576113f6612342565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a90046001600160a01b031684828151811061144757611447612342565b60200260200101906001600160a01b031690816001600160a01b03168152505060ca6000896001600160a01b03166001600160a01b0316815260200190815260200160002060008883815181106114a0576114a0612342565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600101548382815181106114de576114de612342565b6020026020010181815250508381815181106114fc576114fc612342565b60200260200101516001600160a01b031687828151811061151f5761151f612342565b60200260200101516001600160a01b0316146115e85760ce5483516001600160a01b039091169063bb2952fc9085908490811061155e5761155e612342565b60200260200101516040518263ffffffff1660e01b815260040161158491815260200190565b602060405180830381865afa1580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c591906122aa565b8582815181106115d7576115d7612342565b602002602001018181525050611621565b8281815181106115fa576115fa612342565b602002602001015185828151811061161457611614612342565b6020026020010181815250505b8061162b81612358565b91505061126a565b509295509295909350565b60ce54604051632eca54bf60e21b8152670de0b6b3a764000060048201526000916001600160a01b03169063bb2952fc90602401602060405180830381865afa15801561168f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b391906122aa565b905090565b6116c061175d565b606580546001600160a01b0383166001600160a01b031990911681179091556116f16033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60ce54600160a01b900460ff16611753576040516307d03c5160e31b815260040160405180910390fd5b610eec82826119fc565b6033546001600160a01b031633146105b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610f6c565b6117bf611be3565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60975460ff16156105b85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610f6c565b34600003611870576040516356316e8760e01b815260040160405180910390fd5b803414610f7e5760405163162908e360e11b815260040160405180910390fd5b806000036118b1576040516356316e8760e01b815260040160405180910390fd5b34156118d057604051630d7b65ad60e01b815260040160405180910390fd5b610eec6001600160a01b038316333084611c2c565b6040516001600160a01b038316602482015260448101829052610bc990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c64565b606580546001600160a01b0319169055610f7e81611d39565b600054610100900460ff166119885760405162461bcd60e51b8152600401610f6c90612371565b6105b8611d8b565b600054610100900460ff166119b75760405162461bcd60e51b8152600401610f6c90612371565b6105b8611dbb565b6119c7611809565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117ec3390565b33600090815260ca602090815260408083206001600160a01b0386168085529252909120901580611a3a575060cd546001600160a01b038481169116145b15611bb55760ce5460405162b0e38960e81b8152600481018490526000916001600160a01b03169063b0e3890090602401602060405180830381865afa158015611a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aac91906122aa565b905080826001016000828254611ac291906123bc565b909155505060ce54604051636f074d1f60e11b8152600481018390526000916001600160a01b03169063de0e9a3e906024016020604051808303816000875af1158015611b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3791906122aa565b60cd5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bad91906122c3565b505050505050565b81816001016000828254611bc991906123bc565b90915550610bc990506001600160a01b03841633846118e5565b60975460ff166105b85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610f6c565b6040516001600160a01b0380851660248301528316604482015260648101829052610ec79085906323b872dd60e01b90608401611911565b6000611cb9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611dee9092919063ffffffff16565b9050805160001480611cda575080806020019051810190611cda91906122c3565b610bc95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610f6c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611db25760405162461bcd60e51b8152600401610f6c90612371565b6105b833611948565b600054610100900460ff16611de25760405162461bcd60e51b8152600401610f6c90612371565b6097805460ff19169055565b6060611dfd8484600085611e05565b949350505050565b606082471015611e665760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610f6c565b600080866001600160a01b03168587604051611e8291906123f3565b60006040518083038185875af1925050503d8060008114611ebf576040519150601f19603f3d011682016040523d82523d6000602084013e611ec4565b606091505b5091509150611ed587838387611ee0565b979650505050505050565b60608315611f4f578251600003611f48576001600160a01b0385163b611f485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f6c565b5081611dfd565b611dfd8383815115611f645781518083602001fd5b8060405162461bcd60e51b8152600401610f6c919061240f565b80356001600160a01b0381168114611f9557600080fd5b919050565b8015158114610f7e57600080fd5b60008060408385031215611fbb57600080fd5b611fc483611f7e565b91506020830135611fd481611f9a565b809150509250929050565b600060208284031215611ff157600080fd5b611ffa82611f7e565b9392505050565b6000806040838503121561201457600080fd5b61201d83611f7e565b946020939093013593505050565b60006020828403121561203d57600080fd5b5035919050565b60008060006060848603121561205957600080fd5b61206284611f7e565b925061207060208501611f7e565b9150604084013561208081611f9a565b809150509250925092565b60006020828403121561209d57600080fd5b8135611ffa81611f9a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156120d157600080fd5b6120da83611f7e565b915060208084013567ffffffffffffffff808211156120f857600080fd5b818601915086601f83011261210c57600080fd5b81358181111561211e5761211e6120a8565b8060051b604051601f19603f83011681018181108582111715612143576121436120a8565b60405291825284820192508381018501918983111561216157600080fd5b938501935b828510156121865761217785611f7e565b84529385019392850192612166565b8096505050505050509250929050565b600081518084526020808501945080840160005b838110156121cf5781516001600160a01b0316875295820195908201906001016121aa565b509495945050505050565b600081518084526020808501945080840160005b838110156121cf578151875295820195908201906001016121ee565b60a08152600061221d60a0830188612196565b828103602084015261222f81886121da565b905082810360408401526122438187612196565b9050828103606084015261225781866121da565b9050828103608084015261226b81856121da565b98975050505050505050565b6000806040838503121561228a57600080fd5b61229383611f7e565b91506122a160208401611f7e565b90509250929050565b6000602082840312156122bc57600080fd5b5051919050565b6000602082840312156122d557600080fd5b8151611ffa81611f9a565b6001600160a01b039586168152938516602085015260408401929092529092166060820152608081019190915260a00190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561233c5761233c612313565b92915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161236a5761236a612313565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8181038181111561233c5761233c612313565b60005b838110156123ea5781810151838201526020016123d2565b50506000910152565b600082516124058184602087016123cf565b9190910192915050565b602081526000825180602084015261242e8160408501602087016123cf565b601f01601f1916919091016040019291505056fea2646970667358221220528c4542ac1513819ce9cd365a99b1e074443f8b48119229e2c4cce9e03512f964736f6c63430008130033",
  "devdoc": {
    "author": "Noah",
    "details": "features: - deposit ETH, stETH, ERC20 - mint OGNFT (if value >= 10 ETH only && once per user) - mint DepositNFT for each deposit",
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "The new owner accepts the ownership transfer."
      },
      "emergencyWithdraw(address)": {
        "details": "only available after EMERGENCY_WITHDRAW_TIMESTAMP",
        "params": {
          "token": "token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "pendingOwner()": {
        "details": "Returns the address of the pending owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setDepositAllowed(address,bool)": {
        "params": {
          "_allowed": "the allowed status",
          "_token": "the address of the token"
        }
      },
      "setDepositNFT(address)": {
        "params": {
          "_depositNFT": "the address of the deposit NFT contract"
        }
      },
      "setLido(address,address,bool)": {
        "params": {
          "_allowDeposit": "the allowed status",
          "_stETH": "the addresses of the tokens",
          "_wstETH": "the allowed status"
        }
      },
      "setOGNFT(address)": {
        "params": {
          "_ogNFT": "the address of the OG NFT contract"
        }
      },
      "setWithdrawalEnabled(bool)": {
        "params": {
          "_enabled": "the enabled status"
        }
      },
      "transferOwnership(address)": {
        "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
      },
      "withdraw(address,uint256)": {
        "details": "only available if withdrawalEnabled is true",
        "params": {
          "amount": "token amount",
          "token": "token address"
        }
      }
    },
    "title": "Staking.sol",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "emergencyWithdraw(address)": {
        "notice": "Emergency withdraw all tokens"
      },
      "getUserInfo(address,address[])": {
        "notice": "VIEW"
      },
      "pause()": {
        "notice": "Pause deposits to the bridge (admin only)"
      },
      "setDepositAllowed(address,bool)": {
        "notice": "Set the deposit allowed status for a token"
      },
      "setDepositNFT(address)": {
        "notice": "Set the deposit NFT contract address"
      },
      "setLido(address,address,bool)": {
        "notice": "Set the deposit allowed status for lido related tokens"
      },
      "setOGNFT(address)": {
        "notice": "Set the OG NFT contract address"
      },
      "setWithdrawalEnabled(bool)": {
        "notice": "Set the withdrawal enabled status"
      },
      "unpause()": {
        "notice": "Unpause deposits to the bridge (admin only)"
      },
      "withdraw(address,uint256)": {
        "notice": "Withdraw all tokens"
      }
    },
    "notice": "Main Staking Contract for synstation",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 246,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 249,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 916,
        "contract": "contracts/Staking.sol:Staking",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 118,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 238,
        "contract": "contracts/Staking.sol:Staking",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 11,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 105,
        "contract": "contracts/Staking.sol:Staking",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 430,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_paused",
        "offset": 0,
        "slot": "151",
        "type": "t_bool"
      },
      {
        "astId": 535,
        "contract": "contracts/Staking.sol:Staking",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1854,
        "contract": "contracts/Staking.sol:Staking",
        "label": "depositAllowed",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1866,
        "contract": "contracts/Staking.sol:Staking",
        "label": "userInfos",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1859_storage))"
      },
      {
        "astId": 1868,
        "contract": "contracts/Staking.sol:Staking",
        "label": "depositNFT",
        "offset": 0,
        "slot": "203",
        "type": "t_address"
      },
      {
        "astId": 1870,
        "contract": "contracts/Staking.sol:Staking",
        "label": "ogNFT",
        "offset": 0,
        "slot": "204",
        "type": "t_address"
      },
      {
        "astId": 1873,
        "contract": "contracts/Staking.sol:Staking",
        "label": "STETH",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(ILido)1760"
      },
      {
        "astId": 1876,
        "contract": "contracts/Staking.sol:Staking",
        "label": "WSTETH",
        "offset": 0,
        "slot": "206",
        "type": "t_contract(IWstETH)1791"
      },
      {
        "astId": 1878,
        "contract": "contracts/Staking.sol:Staking",
        "label": "withdrawalEnabled",
        "offset": 20,
        "slot": "206",
        "type": "t_bool"
      },
      {
        "astId": 1881,
        "contract": "contracts/Staking.sol:Staking",
        "label": "EMERGENCY_WITHDRAW_TIMESTAMP",
        "offset": 0,
        "slot": "207",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ILido)1760": {
        "encoding": "inplace",
        "label": "contract ILido",
        "numberOfBytes": "20"
      },
      "t_contract(IWstETH)1791": {
        "encoding": "inplace",
        "label": "contract IWstETH",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)1859_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct Staking.UserInfo))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(UserInfo)1859_storage)"
      },
      "t_mapping(t_address,t_struct(UserInfo)1859_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Staking.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)1859_storage"
      },
      "t_struct(UserInfo)1859_storage": {
        "encoding": "inplace",
        "label": "struct Staking.UserInfo",
        "members": [
          {
            "astId": 1856,
            "contract": "contracts/Staking.sol:Staking",
            "label": "wrappedToken",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1858,
            "contract": "contracts/Staking.sol:Staking",
            "label": "wrappedAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}